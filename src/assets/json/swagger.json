{
  "swagger": "2.0",
  "info": {
    "description": "Application Name",
    "version": "1.0.0",
    "title": "Usus CI / CD API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "leander.gebhardt@student.htw-berlin.de"
    }
  },
  "host": "ba-2021.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "project",
      "description": "Everything about your Project"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "projects",
      "description": "Get all projects at once"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/project": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "Add a new project",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Project object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Project could not be saved"
          }
        }
      },
      "put": {
        "tags": [
          "project"
        ],
        "summary": "Update an existing project",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Project not found with Id"
          },
          "500": {
            "description": "Error updating Project with Id"
          }
        }
      }
    },
    "/project/{id}": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Finds project by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project id used to save in database",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Project not found with Id."
          }
        }
      },
      "delete": {
        "tags": [
          "project"
        ],
        "summary": "Delets project by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project id used to save in database",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "500": {
            "description": "Project not found with Id."
          }
        },
        "security": {
          "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get all Projects",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "500": {
            "description": "Project not found with Id."
          }
        }
      }
    },
    "/projects/{username}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get all Project for a specific user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username of user which created project",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "500": {
            "description": "Project not found with Id."
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "500": {
            "description": "Error while saving User"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logging in user with given information.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets specific user with username",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username of User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error retrieving User"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updates user with username",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username for login",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Project object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Invalid username/password supplied"
          },
          "500": {
            "description": "Error updating User"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes User with Id",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The users username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": {
          "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Project Name"
        },
        "user": {
          "type": "string",
          "description": "Creator Username"
        },
        "githubURL": {
          "type": "string",
          "description": "GitHub URL to Project"
        },
        "repoName": {
          "type": "string",
          "description": "GitHub Repository Name"
        },
        "repoOwner": {
          "type": "string",
          "description": "GitHub Repository Repository Owner"
        },
        "githubToken": {
          "type": "string",
          "description": "GitHub Token used for Authentification"
        },
        "deployMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeployMethod"
          }
        }
      }
    },
    "DeployMethod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Heroku",
            "S3"
          ]
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Environment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "'action type' used to execute correct GitHub Action."
        },
        "url": {
          "type": "string",
          "description": "URL to see if Environment was already deployed."
        },
        "builds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}